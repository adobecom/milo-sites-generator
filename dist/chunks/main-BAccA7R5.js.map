{"version":3,"mappings":"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","names":["IS_AUTHOR_MODE","isUniversalEditorMode","parentUrl","error","moveAttributes","from","to","attributes","nodeName","attr","value","moveInstrumentation","loadFonts","__vitePreload","createPageTemplateContainer","nswContainer","createPageTemplateLayout","main","nswLayout","createPageTemplateSidebar","aside","decorateBreadcrumb","breadcrumb","buildBlock","decorateBlock","loadBlock","decoratePageTemplate","getMetadata","sidebar","decorateSearchTemplate","firstSection","search","decorateLinklist","anchors","validLists","anchor","span","li","ul","linkText","textSpan","wrapper","decorateNotFoundTemplate","theme","fetchPlaceholders","decorateMain","decorateButtons","decorateIcons","decorateSections","decorateBlocks","loadEager","doc","decorateTemplateAndTheme","loadSection","waitForFirstImage","loadLazy","loadSections","hash","element","loadHeader","loadFooter","loadDelayed","loadPage","_a","sampleRUM","fetchSearch","path","resp","daPreview"],"ignoreList":[],"sources":["../../src/scripts/constants.js","../../src/scripts/utils.js","../../src/scripts/scripts.js"],"sourcesContent":["/**\n * Check if the current environment is author mode\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const IS_AUTHOR_MODE = window.location.hostname.includes('adobeaemcloud.com');\n","/**\n * Checks if the current window is running in Universal Editor mode.\n *\n * @returns {boolean} - Returns `true` if both strings are found in the URL, otherwise `false`.\n */\n\nimport { IS_AUTHOR_MODE } from './constants.js';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isUniversalEditorMode = () => {\n  // Check if the current environment is author mode\n  if (!IS_AUTHOR_MODE) return false;\n\n  try {\n    if (window.self !== window.top) { // Ensure running inside an iframe\n      const parentUrl = window.top.location.href;\n      return parentUrl.includes('ui#') && parentUrl.includes('universal-editor');\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error checking Universal Editor mode: Possible cross-origin issue.', error);\n  }\n  return false;\n};\n","import {\n  loadHeader,\n  loadFooter,\n  decorateButtons,\n  decorateIcons,\n  decorateSections,\n  decorateBlocks,\n  decorateTemplateAndTheme,\n  waitForFirstImage,\n  loadSection,\n  loadSections,\n  buildBlock,\n  getMetadata,\n  loadBlock,\n  decorateBlock,\n  fetchPlaceholders,\n  sampleRUM,\n} from './aem.js';\nimport { isUniversalEditorMode } from './utils.js';\n\n/**\n * Moves all the attributes from a given elmenet to another given element.\n * @param {Element} from the element to copy attributes from\n * @param {Element} to the element to copy attributes to\n */\nexport function moveAttributes(from, to, attributes) {\n  if (!attributes) {\n    // eslint-disable-next-line no-param-reassign\n    attributes = [...from.attributes].map(({ nodeName }) => nodeName);\n  }\n  attributes.forEach((attr) => {\n    const value = from.getAttribute(attr);\n    if (value) {\n      to.setAttribute(attr, value);\n      from.removeAttribute(attr);\n    }\n  });\n}\n\n/**\n * Move instrumentation attributes from a given element to another given element.\n * @param {Element} from the element to copy attributes from\n * @param {Element} to the element to copy attributes to\n */\nexport function moveInstrumentation(from, to) {\n  moveAttributes(from, to, [...from.attributes]\n    .map(({ nodeName }) => nodeName)\n    .filter((attr) => attr.startsWith('data-aue-') || attr.startsWith('data-richtext-')));\n}\n\n/**\n * load fonts.css and set a session storage flag\n */\nasync function loadFonts() {\n  // eslint-disable-next-line import/no-unresolved, import/extensions\n  await import('Styles/fonts.scss');\n  try {\n    if (!window.location.hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (e) {\n    // do nothing\n  }\n}\n\nfunction createPageTemplateContainer() {\n  const nswContainer = document.createElement('div');\n  nswContainer.classList.add('nsw-container');\n  return nswContainer;\n}\n\nfunction createPageTemplateLayout(main) {\n  const nswLayout = document.createElement('div');\n  nswLayout.classList.add('nsw-layout');\n  nswLayout.append(main);\n  return nswLayout;\n}\n\nfunction createPageTemplateSidebar() {\n  const aside = document.createElement('aside');\n  aside.classList.add('nsw-layout__sidebar', 'nsw-layout__sidebar--desktop');\n  return aside;\n}\n\nfunction decorateBreadcrumb(nswContainer, nswLayout) {\n  const breadcrumb = buildBlock('breadcrumb', '');\n  if (breadcrumb) {\n    nswContainer.insertBefore(breadcrumb, nswLayout);\n    decorateBlock(breadcrumb);\n    loadBlock(breadcrumb);\n  }\n}\n\nexport function decoratePageTemplate(main) {\n  const meta = getMetadata('template');\n  if (meta !== 'page-template' || document.body.classList.contains('page-template-loaded')) {\n    return;\n  }\n\n  document.body.classList.add('page-template-loaded');\n  main.classList.add('nsw-layout__main');\n  const nswContainer = createPageTemplateContainer();\n  const nswLayout = createPageTemplateLayout(main);\n  nswContainer.append(nswLayout);\n  const aside = createPageTemplateSidebar();\n  nswLayout.prepend(aside);\n  document.body.insertBefore(nswContainer, document.querySelector('footer'));\n  decorateBreadcrumb(nswContainer, nswLayout);\n  const sidebar = buildBlock('sidebar', '');\n  if (sidebar) {\n    aside.appendChild(sidebar);\n    decorateBlock(sidebar);\n    loadBlock(sidebar);\n  }\n}\n\nfunction decorateSearchTemplate(main) {\n  const meta = getMetadata('template');\n  if (meta !== 'search-template' || document.body.classList.contains('search-template-loaded')) {\n    return;\n  }\n\n  document.body.classList.add('search-template-loaded');\n\n  // find the first section inside main (the first div)\n  const firstSection = main.querySelector('div') || main.appendChild(document.createElement('div'));\n  if (firstSection) {\n    const search = buildBlock('search', '');\n    if (search) {\n      firstSection.append(search);\n    }\n  }\n\n  const nswContainer = createPageTemplateContainer();\n  const nswLayout = createPageTemplateLayout(main);\n  nswContainer.append(nswLayout);\n  decorateBreadcrumb(nswContainer, nswLayout);\n  document.body.insertBefore(nswContainer, document.querySelector('footer'));\n}\n\n/**\n * Decorates <ul> lists by:\n * - Wrapping them inside <div class=\"nsw-link-list\">.\n * - Adding the class \"linklist\" to <ul>.\n * - Ensuring <li> contains:\n *    - <a> tag with a <span class=\"material-icons nsw-material-icons\">east</span>.\n *    - <a> must also have additional text (excluding <span> text).\n *    - The additional text is moved inside a new <span>.\n */\n// eslint-disable-next-line consistent-return\nconst decorateLinklist = (main) => {\n  // Skip if in universal editor mode\n  if (isUniversalEditorMode()) return false;\n\n  try {\n    const anchors = main.querySelectorAll('ul li a');\n    const validLists = new Set();\n\n    anchors.forEach((anchor) => {\n      const span = anchor.querySelector('span.icon');\n\n      if (span && span.dataset.icon === 'east') {\n        const li = anchor.closest('li');\n        const ul = li?.closest('ul');\n\n        if (li && ul) {\n          // Extract the full text inside <a> (excluding the <span> text)\n          const linkText = anchor.textContent.trim().replace(span.textContent.trim(), '').trim();\n\n          if (linkText.length > 0) {\n            // Remove all existing text from <a>\n            anchor.innerHTML = '';\n\n            // Create and append new <span> for text\n            const textSpan = document.createElement('span');\n            textSpan.textContent = linkText;\n            anchor.appendChild(textSpan);\n\n            // Append the existing <span> (icon)\n            anchor.appendChild(span);\n          }\n\n          validLists.add(ul);\n        }\n      }\n    });\n\n    // Add class to all valid <ul> elements and wrap in a div\n    validLists.forEach((ul) => {\n      ul.classList.add('linklist');\n\n      // Check if ul is already wrapped to avoid duplicate divs\n      if (!ul.parentElement.classList.contains('nsw-link-list')) {\n        const wrapper = document.createElement('div');\n        wrapper.className = 'nsw-link-list';\n\n        moveInstrumentation(ul, wrapper);\n\n        ul.parentNode.insertBefore(wrapper, ul); // Insert wrapper before ul\n        wrapper.appendChild(ul); // Move ul inside wrapper\n      }\n    });\n  } catch (error) {\n    console.error('Error in decorateLinklist:', error);\n  }\n};\n\n/**\n * Builds all synthetic blocks in a container element.\n * @param {Element} main The container element\n */\nfunction buildAutoBlocks() {\n  try {\n    // TODO: add auto block, if needed\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}\n\n/**\n * Applies a theme to the error page based on placeholder values.\n *\n * This function checks if the current page is an error page. If it is,\n * it fetches placeholder data and applies the corresponding error page theme\n * as a CSS class to the `<body>` element.\n *\n * @async\n * @function errorPageTheme\n */\nasync function decorateNotFoundTemplate(main) {\n  if (!window.isErrorPage) return;\n  const { errorpagetheme: theme } = await fetchPlaceholders() || {};\n  if (theme) main.closest('body').classList.add(theme);\n}\n\n/**\n * Decorates the main element.\n * @param {Element} main The main element\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function decorateMain(main) {\n  decoratePageTemplate(main);\n  decorateSearchTemplate(main);\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n  decorateLinklist(main);\n  decorateNotFoundTemplate(main);\n}\n\n/**\n * Loads everything needed to get to LCP.\n * @param {Element} doc The container element\n */\nasync function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    document.body.classList.add('appear');\n    await loadSection(main.querySelector('.section'), waitForFirstImage);\n  }\n\n  try {\n    /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n    if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n      loadFonts();\n    }\n  } catch (e) {\n    // do nothing\n  }\n}\n\n/**\n * Loads everything that doesn't need to be delayed.\n * @param {Element} doc The container element\n */\nasync function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadSections(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  // eslint-disable-next-line import/no-unresolved, import/extensions\n  import('Styles/lazy.scss');\n  loadFonts();\n}\n\n/**\n * Loads everything that happens a lot later,\n * without impacting the user experience.\n */\nfunction loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}\n\nasync function loadPage() {\n  // skip if in test mode\n  if ((typeof process !== 'undefined') && process?.env?.VITEST) {\n    return;\n  }\n\n  if (window.isErrorPage) {\n    sampleRUM('404', { source: document.referrer });\n  }\n\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}\n\nexport async function fetchSearch() {\n  window.searchData = window.searchData || {};\n  if (Object.keys(window.searchData).length === 0) {\n    const placeholders = await fetchPlaceholders();\n    const path = placeholders.pagesindexurl;\n    const resp = await fetch(path);\n    window.searchData = JSON.parse(await resp.text()).data;\n  }\n  return window.searchData;\n}\n\nloadPage();\n\n(async function loadDa() {\n  if (!new URL(window.location.href).searchParams.get('dapreview')) return;\n  // eslint-disable-next-line import/no-unresolved\n  import('https://da.live/scripts/dapreview.js').then(({ default: daPreview }) => daPreview(loadPage));\n}());\n"],"file":"chunks/main-BAccA7R5.js"}